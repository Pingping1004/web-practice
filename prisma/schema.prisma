generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  User
  Staff
  Admin
}

enum AuthProvider {
  Local
  Google
}

enum MfaMethod {
  Totp
  Email
  None
}

enum DeviceStatus {
  Trusted
  Banned
  Unverified
}

enum TrustLevel {
  Blacklist
  Basic
  Privilege
  Admin
}

enum BanSeverity {
  Permanent
  High
  Medium
  Low
}

model User {
  userId            String          @id @default(uuid())
  username          String          @unique
  email             String          @unique
  password          String?
  createdAt         DateTime        @default(now())
  role              Role            @default(User)
  provider          AuthProvider    @default(Local)

  oauthAccounts     OAuthAccount[]
  sessions          Session[]
  device            Device[]

  mfaEnabled        Boolean         @default(false)
  mfaSecret         String?
  mfaMethod         MfaMethod       @default(None)

  @@index([userId])
  @@index([email])
  @@index([username])
}

model OAuthAccount {
  oauthId           String          @id @default(uuid())
  provider          AuthProvider
  providerUserId    String
  userId            String
  user              User            @relation(fields: [userId], references: [userId])

  @@unique([provider, providerUserId])

  @@index([oauthId])
  @@index([userId])
}

model Session {
  sessionId         String          @id @default(uuid())
  jti               String          @unique
  hashedToken       String          @unique
  userId            String
  deviceId          String          // Link to device table as foreign key

  // JWT claims
  expiresAt         DateTime
  issuedAt          DateTime        @default(now())
  lastUsedAt        DateTime        @default(now())

  // Session state
  isUsed            Boolean         @default(false)
  isRevoked         Boolean         @default(false)
  RevokedAt         DateTime?
  revokedReason     String?

  ipAddress         String
  mfaVerified       Boolean         @default(false)
  mfaVerifiedAt     DateTime?

  user              User            @relation(fields: [userId], references: [userId], onDelete: Cascade)
  device            Device          @relation(fields: [deviceId], references: [deviceId], onDelete: Cascade)

  @@index([jti])
  @@index([deviceId])
  @@index([expiresAt])
}

model Device {
  deviceId          String          @id @default(uuid())
  userId            String
  deviceHash        String
  deviceName        String?
  ipAddress         String

  deviceStatus      DeviceStatus
  trustLevel        TrustLevel
  banSeverity       BanSeverity?

  expiresAt         DateTime?
  lastUsedAt        DateTime        @default(now())
  createdAt         DateTime        @default(now())

  isRevoked         Boolean         @default(false)
  RevokedAt         DateTime?
  revokedReason     String?

  user              User            @relation(fields: [userId], references: [userId], onDelete: Cascade)
  sessions          Session[]

  @@index([userId])
  @@index([deviceHash])
  @@index([ipAddress])
  @@index([deviceStatus])
}
